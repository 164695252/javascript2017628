### 展示markdown笔记的网站：
https://maxiang.io/
### 页面由三部分构成
- html 超文本标记语言
- css 层叠样式表
- js  轻量级的脚本语言
行为样式结构相分离
### js由三部分构成
- ECMAScript 实际就是JS的语法，包含变量，条件判断，循环，数据类型等等； 兼容性很棒，没有任何问题
- DOM  document object model （文档对象模型） 有很多兼容性问题，但是程序员可以解决
- BOM  browser object model （浏览器对象模型） 不兼容，不能解决
### 常用快捷键
- 强制换行 mac:command+enter; window:control+center;
- webstrom中快速打出代码"
    + ul>li>p*2 + tab键
- 把代码收缩展开：
    + 收缩 mac:command+"-"; window: control+"-"
    + 展开 mac:command+"+"; window: control+"+"
### css的引入方式有几种
- 行内样式 style=""
- 内嵌样式 style
- 外链： link:href
### js的引入方式三种：
- 行内  onclick="alert('1223')" 点击事件；  onmouseover鼠标移入事件
- 内嵌   script标签內来写
- 外链 <script src="xxx.js"></script>

### js编程思路的形成
1、找到谁 - 获取元素
2、给谁加什么事件
3、干什么事

- 小总结：JS是用来操作css的；

### 上午留下的小扩展作业
- css题：左边容器的宽度固定为200，右边容器自适应，请用至少三种方法来实现；
- 只有一个按钮，点击该按钮，div显示，再点击改按钮，div隐藏；
### 小技巧：不知道如何下笔的时候，就写汉字；
### 对象具有两个特征
1、属性
2、方法
属性和方法的区别：属性没括号，方法有括号

### this的小总结
- 当函数被调用的时候，看前面是否有".",点前面是谁，this就是谁；
- 当函数被调用的时候，如果前面没".",说明被window给调用的；this就是window；
- 点元素身上的事件被触发的时候，会执行一个函数，函数中的this指向当前被触发事件的这个元素；
    ```
    oDiv.onclick=function(){
        this -> oDiv
    }
    ```
### 输出方式-  帮助我们调试和测试代码
- alert()  弹出框
- confirm() 会有返回值： true false
- console.log() 打印出来,在控制台输出
- console.dir() 打印出对象身上的属性和方法；即，打印出对象身上的详细信息；
- document.write() 在页面输出
- innerHTML 可以输出元素所包裹的内容；  innerText 输出文本；
- console.table() 把对象以表格的形式在控制台输出 -- 可以不掌握，因为他基本不用

### 命名规范：匈牙利命名法 也叫做 驼峰式命名法
- 除了第一个单词外，从第二个单词开始，每个单词的首字母大写；
- 常用的命名前缀
    + a  数组  比如：array，arr, ary， aDiv获取到一组元素对象
    + o  对象  比如：obj普通对象   oDiv获取到一个元素对象
    + s  字符串 string
    + n  数字 number
    + b  布尔值 boolean: true  false;

### 数据类型
1、 基本数据类型:
    + string 字符串， number 数据， boolean 布尔值，null， undefined
2、 引用数据类型
    + 对象数据类型
        + 普通的对象 object,数组 array, Date,RegExp /^\d{2}$/
    + 函数数据类型
        + function(){}
3、基本数据类型和引用数据类型的区别：
    基本数据类型是对值的引用，引用数据类型是对地址的引用；
### 循环
- for 循环四部曲
    1、定义
    2、条件
    3、语句
    4、自增
    ![for循环图解](http://ww4.sinaimg.cn/large/a15b4afegy1fhcly2fvdtj20qf0cvabg)

- 判断：
    + if...else if....else
    ```
    if(num==0){
       alert('0')
    }else if(num==1){
        alert('1')
    }else if(num==2){
        alert('2')
    }else{
        alert('3')
    }
    ```
    + switch...case..break
    ```
    switch(num){
            case 0:
                alert(0);
                break;
            case 1:
                alert(1);
                break;
            case 2:
                alert(2);
                break;
            default:
                alert(3);
                break;
        }
    ```
### 隔行换色，两种思路
- 条件判断：if...else if...else....     switch...case break....
- 用%的思想：
    + 小技巧：有几种情况，就%几；




























